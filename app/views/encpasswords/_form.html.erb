<script type="text/javascript">

var keyLow = "abcdefghijklmnopqrstuvwxyz";
var keyUps = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
var keyNums = "1234567890";
var keySpec = "!@#$%^&*()-_=+<>\/?<>[]{}|";
var temp = "";
var keys = "";

function generatepass(plength){
	temp = "";
	var lows = 0;
	var ups = 0;
	var nums = 0;
	var specs = 0;
	
	if(document.getElementById("keyLow").checked==true){
		keys = keyLow;
		while(lows ==0){
			lows = Math.round(Math.random()*(plength/3));
		}
	}
	
	for (j=0;j<lows;j++){
		temp += keyLow.charAt(Math.round(Math.random()*keyLow.length));
	}
	
	if(document.getElementById("keyUps").checked==true){
		keys = keyUps; 
		while(ups ==0){
			ups = Math.round(Math.random()*(plength/3));
		}
	}
	
	for (j=0;j<ups;j++){
		temp += keyUps.charAt(Math.round(Math.random()*keyUps.length));
	}
	
	
	
	
	if(document.getElementById("keyNums").checked==true){
		keys = keyNums;
		while(nums ==0){
			nums = Math.round(Math.random()*(plength/3));
		}
	}
	
	for (j=0;j<nums;j++){
		temp += keyNums.charAt(Math.round(Math.random()*keyNums.length));
	}
	
	if(document.getElementById("keySpec").checked==true){
		keys = keySpec;
		while(specs==0){
			specs = Math.round(Math.random()*(plength/3));
		}
	}
	
	for (k=0;k<specs;k++){
		temp += keySpec.charAt(Math.round(Math.random()*keySpec.length));
	}
	
	for (i=0;i<(plength-nums-specs-lows-ups);i++){
		temp += keys.charAt(Math.floor(Math.random()*keys.length));
	}
	
	var shuffled = temp.split('').sort(function(){return 0.5-Math.random()}).join('');
	return shuffled;
}

function populateform(enterlength){
	document.getElementById("encpassword_password").value=generatepass(enterlength);
}
</script>


<% if @encpassword.errors.any? %>
  <div id="error_explanation">
    <div class="alert alert-error">
      The form contains <%= pluralize(@encpassword.errors.count, "error") %>.
    </div>
    <ul>
    <% @encpassword.errors.full_messages.each do |msg| %>
      <li><%= msg %></li>
    <% end %>
    </ul>
  </div>
<% end %>



<%= form_for @encpassword, :html => { :class => 'form-horizontal' } do |f| %>
<div class="control-group">
    <label class = "control-label">Enter Desired Length for Password :</label>
    <div class="controls">
      <input type="text" name="thelength" id="thelength" size=3 value="8" class="text_field"/>
    </div>
  </div>

  <div class="control-group">
	    <label class = "checkbox controls">
	    	Include Lower Case ?
			<input type="checkbox" id="keyLow" name="keyLow"  class="text_field"/>
	    </label>
  </div>
  
  <div class="control-group">
	    <label class = "checkbox controls">
	    	Include Upper Case ?
			<input type="checkbox" id="keyUps" name="keyUps"  class="text_field"/>
	    </label>
  </div>
  
  <div class="control-group">
	    <label class = "checkbox controls">
	    	Include Numbers ?
			<input type="checkbox" id="keyNums" name="keyNums"  class="text_field"/>
	    </label>
  </div>

  <div class="control-group">
	    <label class = "checkbox controls">
	    	Include Special Characters ?
			<input type="checkbox" id="keySpec" name="keySpec"  class="text_field"/>
	    </label>
  </div>

  <div class="control-group">
  <input type="button" value="Generate Password" onClick="populateform(this.form.thelength.value);" class="controls btn"/>
</div>
  <div class="control-group">
    <%= f.label :password, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :password, :class => 'text_field' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :master_password, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :master_password, :class => 'text_field' %>
    </div>
  </div>
  <div class="control-group">
    <%= f.label :service, :class => 'control-label' %>
    <div class="controls">
      <%= f.text_field :service, :class => 'text_field' %>
    </div>
  </div>

  <div class="form-actions">
    <%= f.submit "Save Password", :class => 'btn btn-primary' %>
    <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                encpasswords_path, :class => 'btn' %>
  </div>
<% end %>
